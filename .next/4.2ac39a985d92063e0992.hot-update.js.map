{"version":3,"file":"4.2ac39a985d92063e0992.hot-update.js","sources":["webpack:///components/Prices.js","webpack:///./node_modules/unescape-unicode/src/errors.js","webpack:///./node_modules/unescape-unicode/src/parse.js","webpack:///./node_modules/unescape-unicode/src/unescape-unicode.js"],"sourcesContent":["const unescapeUnicode = require(\"unescape-unicode\");\n\nclass Prices extends React.Component {\n  state = {\n    currency: \"USD\"\n  };\n\n  render() {\n    let list = \"\";\n\n    if (this.state.currency === \"USD\") {\n      list = (\n        <li className=\"list-group-item\">\n          Bitcoin rate for {this.props.bpi.USD.description} :{\" \"}\n          <span className=\"badge badge-primary\">{this.props.bpi.USD.code}</span>\n          <strong>{unescapeUnicode(`${this.props.bpi.symbol}`)}</strong>\n          <strong>{this.props.bpi.USD.rate}</strong>\n        </li>\n      );\n    } else if (this.state.currency === \"GBP\") {\n      list = (\n        <li className=\"list-group-item\">\n          Bitcoin rate for {this.props.bpi.GBP.description} :{\" \"}\n          <span className=\"badge badge-primary\">{this.props.bpi.GBP.code}</span>\n          <strong>{this.props.bpi.GBP.rate}</strong>\n        </li>\n      );\n    } else if (this.state.currency === \"EUR\") {\n      list = (\n        <li className=\"list-group-item\">\n          Bitcoin rate for {this.props.bpi.EUR.description} :{\" \"}\n          <span className=\"badge badge-primary\">{this.props.bpi.EUR.code}</span>\n          <strong>{this.props.bpi.EUR.rate}</strong>\n        </li>\n      );\n    }\n    return (\n      <div>\n        <ul className=\"list-group\">{list}</ul>\n        <br />\n        <select\n          onChange={e => this.setState({ currency: e.target.value })}\n          className=\"form-control\"\n        >\n          <option value=\"USD\">USD</option>\n          <option value=\"EUR\">EUR</option>\n          <option value=\"GBP\">GBP</option>\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default Prices;\n\n\n\n// WEBPACK FOOTER //\n// components/Prices.js","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\n/**\n * Contains functions for generating error messages used throughout <code>unescape-unicode</code>.\n *\n * @type {Object.<string, Function>}\n */\nconst errors = {\n\n  /**\n   * Returns the error message to be used when insufficient characters were found within the input string to represent a\n   * valid Unicode escape.\n   *\n   * @param {number} missing - the number of characters missing (negative)\n   * @return {string} The error message.\n   */\n  insufficientCharacters(missing) {\n    return `Insufficient characters found: ${missing}`;\n  },\n\n  /**\n   * Returns the error message to be used when an unexpected character is found within the Unicode escape.\n   *\n   * @param {string} ch - the unexpected character that was found\n   * @param {number} index - the index at which <code>ch</code> was found relative to the input string\n   * @return {string} The error message.\n   */\n  unexpectedCharacter(ch, index) {\n    return `Unexpected character \"${ch}\" found at ${index}`;\n  }\n\n};\n\nmodule.exports = errors;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/unescape-unicode/src/errors.js\n// module id = ./node_modules/unescape-unicode/src/errors.js\n// module chunks = 4","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst errors = require('./errors');\n\n/**\n * A map of parsers for valid characters found within the hexadecimal segment of a Unicode escape.\n *\n * This map is used for hash lookup performance.\n *\n * @type {Object.<string, Function>}\n */\nconst parsers = {};\n\n/**\n * Parses the specified hexadecimal character found within the input string at the given <code>index</code> and\n * recalclates the <code>unicode</code> code point (hexadecimal value) provided.\n *\n * An error will be thrown if <code>ch</code> is not valid within a Unicode escape.\n *\n * @param {string} ch - the character to be parsed to recalculate the <code>unicode</code> code point\n * @param {number} unicode - the current Unicode code point\n * @param {number} index - the index of <code>ch</code> within the input string\n * @return {number} The recalculated Unicode code point (hexadecimal value).\n * @throws {Error} If <code>ch</code> is not a valid hexadecimal character.\n */\nfunction parse(ch, unicode, index) {\n  const parser = parsers[ch];\n  if (parser) {\n    return parser(ch.charCodeAt(0), unicode);\n  }\n\n  throw new Error(errors.unexpectedCharacter(ch, index));\n}\n\n/**\n * Maps the specified <code>parser</code> function to each of the characters provided.\n *\n * @param {string} chars - a string containing the characters to be mapped to <code>parser</code>\n * @param {Function} parser - the parser function to calculate the Unicode value for each of the characters\n * @return {void}\n */\nfunction register(chars, parser) {\n  chars.split('').forEach((ch) => {\n    parsers[ch] = parser;\n  });\n}\n\nregister('0123456789', (code, unicode) => (unicode << 4) + code - 0x30);\nregister('ABCDEF', (code, unicode) => (unicode << 4) + 10 + code - 0x41);\nregister('abcdef', (code, unicode) => (unicode << 4) + 10 + code - 0x61);\n\nmodule.exports = parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/unescape-unicode/src/parse.js\n// module id = ./node_modules/unescape-unicode/src/parse.js\n// module chunks = 4","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst errors = require('./errors');\nconst parse = require('./parse');\n\n/**\n * Returns the offset to be added on top of the specified <code>start</code> index relative to <code>input</code>.\n *\n * The offset is calculated based on whether <code>input<code> begins with \"\\u\".\n *\n * An error will be thrown if the initial character is a backslash but it is not followed by a lower case \"u\", as this\n * is not a valid Unicode escape.\n *\n * @param {string} input - the string containing the Unicode escape to which the offset is to be applied\n * @param {number} start - the index of the Unicode escape within <code>input</code> to which the offset is to be\n * applied (inclusive)\n * @return {number} The additional offset to be applied to <code>start</code>.\n * @throws {Error} If <code>input</code> doesn't contain a valid Unicode escape at <code>start</code>.\n */\nfunction getOffset(input, start) {\n  let ch = input[start];\n\n  if (ch === '\\\\') {\n    ch = input[start + 1];\n    if (ch !== 'u') {\n      throw new Error(errors.unexpectedCharacter(ch, start + 1));\n    }\n\n    return 2;\n  }\n\n  return 0;\n}\n\n/**\n * Converts the Unicode escape within <code>input</code>.\n *\n * The Unicode escape <i>must</i> be valid, although it can just contain hexadecimal segment. That is, it has to match\n * the following pattern:\n *\n * <pre>\n * (\\\\u)?[0-9A-Fa-f]{4}\n * </pre>\n *\n * An error will be thrown if no valid Unicode escape is found.\n *\n * Optionally, a <code>start</code> index can be provided to begin conversion at a specific location within\n * <code>input</code>. If <code>start</code> is not specified, <code>null</code>, or negative, the conversion will begin\n * at the start of <code>input</code>.\n *\n * @example\n * unescapeUnicode('\\\\u2665');\n * //=> \"♥\"\n * unescapeUnicode('2665');\n * //=> \"♥\"\n * unescapeUnicode('I \\\\u2665 Unicode!', 2);\n * //=> \"♥\"\n * @param {?string} input - the string containing the Unicode escape to be converted (may be <code>null</code>)\n * @param {number} [start=0] - the index of the Unicode escape to be converted within <code>input</code> (inclusive -\n * may be <code>null</code>)\n * @return {?string} The Unicode character converted from the escape within <code>input</code> or <code>null</code> if\n * <code>input</code> is <code>null</code>.\n * @throws {Error} If <code>input</code> doesn't contain a valid Unicode escape at <code>start</code>.\n */\nfunction unescapeUnicode(input, start) {\n  if (input == null) {\n    return input;\n  }\n  if (start == null || start < 0) {\n    start = 0;\n  }\n\n  start += getOffset(input, start);\n\n  const end = Math.min(start, input.length) + 4;\n  if (end > input.length) {\n    throw new Error(errors.insufficientCharacters(input.length - end));\n  }\n\n  let unicode = 0;\n  for (let i = start; i < end; i++) {\n    unicode = parse(input[i], unicode, i);\n  }\n\n  return String.fromCharCode(unicode);\n}\n\nmodule.exports = unescapeUnicode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/unescape-unicode/src/unescape-unicode.js\n// module id = ./node_modules/unescape-unicode/src/unescape-unicode.js\n// module chunks = 4"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAhDA;AACA;AAkDA;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}